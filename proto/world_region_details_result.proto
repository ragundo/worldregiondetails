option optimize_for=LITE_RUNTIME;

message DF_coord2d
{
    required int32 pos_x = 1;
    required int32 pos_y = 2;
};

message DF_wrd_T_edges
{
    // df::coord2d split_x[16][17]; /*!< splits for horizontal edges, x=min y=max */
    repeated DF_coord2d split_x      =  1;
    
    // df::coord2d split_y[17][16]; /*!< splits for vertical edges, x=min y=max */
    repeated DF_coord2d split_y      =  2;
    
    // int8_t biome_corner[16][16]; /*!< upleft=0,upright=1,downleft=2,downright=3?? */
    repeated int32      biome_corner =  3;
    
    // int8_t biome_x[16][16]; /*!< up=0,down=1 */
    repeated int32      biome_x      =  4;
    
    // int8_t biome_y[16][16]; /*!< left=0,right=1 */
    repeated int32      biome_y      =  5;
};

message DF_wrd_T_rivers_vertical
{
    // int16_t x_min[16][17];
    repeated int32 x_min     =  1;
    // int16_t x_max[16][17];
    repeated int32 x_max     =  2;
    // int8_t active[16][17];
    repeated int32 active    =  3;
    // int16_t elevation[16][17];
    repeated int32 elevation =  4;
};

message DF_wrd_T_rivers_horizontal
{
    // int16_t y_min[17][16];
    repeated int32 y_min     =  1;
    
    // int16_t y_max[17][16];
    repeated int32 y_max     =  2;
    
    // int8_t active[17][16];
    repeated int32 active    =  3;
    
    // int16_t elevation[17][16];
    repeated int32 elevation =  4;
};


message DF_world_region_details_result
{
    // int8_t biome[17][17];
    repeated int32                      biome             =  1;

    // int16_t elevation[17][17];
    repeated int32                      elevation         =  2;

    required DF_wrd_T_edges             edges             =  4;
    
    // df::coord2d pos;
    required DF_coord2d                 pos               =  5;
    
    required DF_wrd_T_rivers_vertical   rivers_vertical   =  6;
    required DF_wrd_T_rivers_horizontal rivers_horizontal =  7;
    
    required int32                      lava_stone        =  8;
    
    // int16_t elevation2[16][16];
    repeated int32                      elevation2        =  9;
    
    //
    // Uncomment these fields if the data is really needed
    //

//    // uint32_t seed[16][16]; /*!< looks random */
//    repeated int32                      seed              =  3;

//    required int32                      unk12e8           = 10;
//    required int32                      anon_1            = 11;
//    required int32                      anon_2            = 12;
//    required int32                      anon_3            = 13;
//    required int32                      anon_4            = 14;
//    // int8_t unk11[16][16];
//    repeated int32                      unk11             = 15;
//    // int16_t unk_12[1152]; /*!< v0.40.01 */
//    repeated int32                      unk_12            = 16;


//    // std::vector<df::world_region_feature* > features[16][16];
//    repeated DF_world_region_feature    features          = 17;

//    // int32_t undef13[256];
//    repeated int32                      undef13           = 18;


}
